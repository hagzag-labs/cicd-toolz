# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Use Node v12
        uses: actions/setup-node@v3
        with:
          node-version: 12

      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

      - uses: actions/cache@v3
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: generate .releaserc.yml
        run: |
          cat <<EOF>> .releaserc.yml
          branches:
          - main
          plugins:
          - "@semantic-release/commit-analyzer"
          - "@semantic-release/release-notes-generator"
          - "@semantic-release/github"
          - - "@semantic-release/exec"
            - verifyReleaseCmd: echo \${nextRelease.version} > nextVersion
          EOF

      - name: show .releaserc.yml
        run: cat .releaserc.yml && git status
          
      - name: install semantic-release & plugins
        run: |
          npm install -g semantic-release \
                         @semantic-release/github \
                         @semantic-release/exec \
                         @semantic-release/commit-analyzer \
                         @semantic-release/release-notes-generator \
                         @semantic-release/git
      
      - name: execute semantic-release
        run: |
          semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
